from Tree import TreeNode#Given root, node1, node2#Return node1 and node2's lowest Common Ancestordef lowestCommonAncestorH(root, node1, node2):    LCA = root    if node1.val > root.val and node2.val > root.val:        LCA = lowestCommonAncestorH(root.right, node1, node2)    if node1.val < root.val and node2.val < root.val:        LCA = lowestCommonAncestorH(root.left, node1, node2)    return LCAdef lowestCommonAncestor(root, node1, node2):    if node1.val in root.preTraversePrint() and node2.val in root.preTraversePrint():        LCA = lowestCommonAncestorH(root, node1, node2)        return LCA    else:        return Nonenode5 = TreeNode(5)node2 = TreeNode(2)node8 = TreeNode(8)node9 = TreeNode(9)node1 = TreeNode(1)node4 = TreeNode(4)node3 = TreeNode(3)node0 = TreeNode(0)node5.left = node2node5.right = node8node8.right = node9node2.left = node1node2.right = node4node4.left = node3print(node5.levelOrderTraverse())print(lowestCommonAncestor(node5, node1, node0))